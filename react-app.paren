;;; Note: react has changed since cl-react.psx:compile-node
;;; ReactDOM.a is not a function any more, you need React.createElement('a')
;;; I've only fixed this in my local-projects folder.

;;; Some convenience re-defines
(defvar react-dom +react-d-o-m)
(defun get-element-by-id (id)
  ((@ document "getElementById") id))

(setf lodash _)
(setf map (@ lodash map))

(quote
 ;; Wow. I can change how lisp capitalizes things as it evaluates them.
 ;; Do I really want to do this? I think for now I'll refrain
 ;; https://github.com/l04m33/parenscript-react-examples/blob/104063d1b73ef4ed41c04817d8b9bae9a1e0948f/ps-compile.lisp#L40
 (progn
   (readtable-case *readtable*) ; :UPCASE
   (setf (readtable-case *readtable*) :invert)
   (setf (readtable-case *readtable*) :upcase))
 ) ; M-x slime-eval-last-expression

(setf container (get-element-by-id "root"))

(defun state-observer (state)
  (let ((state-string ((@ *JSON* stringify) (list "The first zombie:" a-zombie
                                                  "STATE:" state) () 2))))
  (cl-react:psx (:pre state-string )))

(defun app (props)
  (let ((zombies (or (@ props zombies)))
        (reset-zombie (@ props reset-zombie))))
    (cl-react:psx
     (:div

      (:img :key :pea :src "./assets/pea-shooter-pixelated.png"
            :style (create :position :relative))
;      (zombie)
      (zombie a-zombie)
      (shot a-shot)
      (:hr)
      (state-observer props)
      )))

(setf a-shot (create :x 120 :y 65))

(defun shot (props)
;  (clog props)
  (with-slots (x y) (@ props children) ; hmm.....
    (cl-react:psx
     (:img :src "./assets/pea.png"
           :style (create :position :relative
                          :float :left
                          :left (px x)
                          :top (px y)
                          )))))
;;; So the props are coming in as children
;;; that actually makes sense, ish.
(defun zombie (props)
  ;;(clog "zombie" props)
  ;;debugger
  (let ((x (@ props children x))
        (my-props ((@ *JSON* stringify) props)))
    (cl-react:psx
     (:div
      (:img :key :zombie
            :position "relative"
            :src "./assets/zombie.png"
            :style (create :left (px x)
                           :position "relative"
                           :margin-left (px -100)))
      (:span my-props)))))

(defun render ()
  (chain react-dom (render (app *state*)
                           container)))

(defun px (n)
  (+ n "px"))
