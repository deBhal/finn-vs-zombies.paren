(quote
 (progn
   ;; Setup skewer
   (progn
     (setq httpd-port 8081)  ; I'm already using the default port 8080
     (httpd-serve-directory (format "%s" default-directory))
     (browse-url (format "http://127.0.0.1:%d/index.html" httpd-port))
     (slime-mode)
     (trident-mode)
     (steal-slime-keys-for-trident!)
     (slime-eval '(ql:quickload :parenscript))
     (slime-eval "hi")
     ;; (slime-eval 'cl:*package*)
     ;; The # character in the printed package name fouls up something in the
     ;; connection, so we need to suppress that response.
     ;; So slime-eval runs in the swank-io package, which would appear not to
     ;; use the common lisp package.
     (slime-eval '(cl:and
                           (cl:defpackage :skeleton
                             (:use :common-lisp :parenscript))
                   "Created Package Skeleton")
                 )

     (slime-eval '(cl:progn
                   (cl:in-package :skeleton)
                   (cl:use-package :parenscript)
                   ))
     (slime-repl-set-package :skeleton)
 ;; ^^ (C-c m e) Here for all that
 )

(quote
 (progn
   (in-package :skeleton)
   (use-package :parenscript)
   )
 ;; ^^ (M-x slime-eval-last-expression) here
 )


((ps:getprop console 'log) "Trident is working as expected")

(defun get-element-by-id (id)
  ((@ document "getElementById") id))
